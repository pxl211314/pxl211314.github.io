<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>homework7</title>
    <link href="/2022/04/17/homework7/"/>
    <url>/2022/04/17/homework7/</url>
    
    <content type="html"><![CDATA[<h4 id="7-1-简述网络通信的四个安全要素"><a href="#7-1-简述网络通信的四个安全要素" class="headerlink" title="7.1 简述网络通信的四个安全要素"></a>7.1 简述网络通信的四个安全要素</h4><h6 id="保密性"><a href="#保密性" class="headerlink" title="保密性"></a>保密性</h6><p>​        保密性是网络信息不被泄露给非授权的用户、实体或过程，或供其利用的特性。即，防止信息泄漏给非授权个人或实体，信息只为授权用户使用的特性。保密性是在可靠性和可用性基础之上，保障网络信息安全的重要手段。</p><h6 id="完整性"><a href="#完整性" class="headerlink" title="完整性"></a>完整性</h6><p>​        完整性是网络信息未经授权不能进行改变的特性。即网络信息在存储或传输过程中保持不被偶然或蓄意地删除、修改、伪造、乱序、重放、插入等破坏和丢失的特性。完整性是一种面向信息的安全性，它要求保持信息的原样，即信息的正确生成和正确存储和传输。</p><h6 id="真实性"><a href="#真实性" class="headerlink" title="真实性"></a>真实性</h6><p>​        在信息传递的过程中，我们需要保证信息从源头开始的真实；现实世界中的例子：身份证、护照、信用卡、驾照；网络世界中的例子：数字证书、数字签名</p><h6 id="不可抵赖性"><a href="#不可抵赖性" class="headerlink" title="不可抵赖性"></a>不可抵赖性</h6><p>​        不可抵赖性也称作不可否认性，在网络信息系统的信息交互过程中，确信参与者的真实同一性。即，所有参与者都不可能否认或抵赖曾经完成的操作和承诺。利用信息源证据可以防止发信方不真实地否认已发送信息，利用递交接收证据可以防止收信方事后否认已经接收的信息。</p><h4 id="7-2简述各类加密方法、哈希和数字签名的基本概念，以及所能保证的安全特性"><a href="#7-2简述各类加密方法、哈希和数字签名的基本概念，以及所能保证的安全特性" class="headerlink" title="7.2简述各类加密方法、哈希和数字签名的基本概念，以及所能保证的安全特性"></a>7.2简述各类加密方法、哈希和数字签名的基本概念，以及所能保证的安全特性</h4><h5 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h5><h6 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h6><p>​        加密和解密使用同一个密钥</p><h6 id="能保证的安全特性："><a href="#能保证的安全特性：" class="headerlink" title="能保证的安全特性："></a>能保证的安全特性：</h6><p>​        算法公开，计算量小，加密速度快，加密效率高<br>​        由于用一个密钥加密的消息只能用同一个密钥解密，因此拥有密钥的被授权方才能创建消息，因此保证了数据的保密性。<br>​        对称加密不具备不可否认性，当有多方使用同一个密钥时，无法判断是哪一方执行的加密和解密</p><h5 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h5><h6 id="基本概念：-1"><a href="#基本概念：-1" class="headerlink" title="基本概念："></a>基本概念：</h6><p>​        使用两个不同的密钥，称为公钥和私钥；私钥为所有者私钥，公钥共享。<br>​        算法强度复杂、安全性依赖于算法与密钥但是由于其算法复杂,而使得加密解密速度没有对称加密解密的速度快</p><h6 id="能保证的安全特性：-1"><a href="#能保证的安全特性：-1" class="headerlink" title="能保证的安全特性："></a>能保证的安全特性：</h6><p>​        私钥加密只能通过对应的公钥解密，因此私钥加密提供了真实性、不可否认性和完整性保护。<br>​        公钥加密只能用对应的私钥进行解密，因此提供了保密性保护，但不提供完整性和真实性的保护。</p><h5 id="哈希"><a href="#哈希" class="headerlink" title="哈希"></a>哈希</h5><h6 id="基本概念：-2"><a href="#基本概念：-2" class="headerlink" title="基本概念："></a>基本概念：</h6><p>​        哈希是一种单向、不可逆的数据保护机制，这种机制常见于密码的存储，常见的算法包括：MD5和SHA</p><h6 id="能保证的安全特性：-2"><a href="#能保证的安全特性：-2" class="headerlink" title="能保证的安全特性："></a>能保证的安全特性：</h6><p>​        利用哈希可以用来获得消息摘要，消息摘要附加在消息后面，用于验证消息是否发生篡改。<br>​        哈希可以用于保护存储数据、减轻恶意媒介和授权不足带来的云威胁，保证数据完整性。</p><h5 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h5><h6 id="基本概念：-3"><a href="#基本概念：-3" class="headerlink" title="基本概念："></a>基本概念：</h6><p>​        数字签名是一种通过身份验证和不可否认性来提供数据真实性和完整性的手段,常见的算法有：RSA，DSA，ECDSA<br>​        发送消息时，附加一个数字签名，如果消息被篡改，数字签名就会变得非法</p><h6 id="能保证的安全特性：-3"><a href="#能保证的安全特性：-3" class="headerlink" title="能保证的安全特性："></a>能保证的安全特性：</h6><p>​        用私钥对消息摘要进行加密，附加到消息摘要后面。<br>​        接受者收到后对消息进行哈希得到一个消息摘要，<br>​        用公钥对加密后的消息摘要进行解密，如果一致则<br>​        保证了消息的完整性。</p>]]></content>
    
    
    
    <tags>
      
      <tag>cloud computing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>homework2</title>
    <link href="/2022/03/19/homework2/"/>
    <url>/2022/03/19/homework2/</url>
    
    <content type="html"><![CDATA[<h4 id="1-1-列举威胁作用者有哪些，并简要说明。"><a href="#1-1-列举威胁作用者有哪些，并简要说明。" class="headerlink" title="1.1 列举威胁作用者有哪些，并简要说明。"></a>1.1 列举威胁作用者有哪些，并简要说明。</h4><p>​    威胁作用者是引发威胁的实体，能够实施攻击。</p><h6 id="匿名攻击者："><a href="#匿名攻击者：" class="headerlink" title="匿名攻击者："></a>匿名攻击者：</h6><p>​        匿名攻击者是不被信任的威胁作用者，通常试图从云边界的外部进行攻击。</p><h6 id="恶意服务作用者："><a href="#恶意服务作用者：" class="headerlink" title="恶意服务作用者："></a>恶意服务作用者：</h6><p>​        恶意服务作用者截取网络通信，试图恶意的使用或篡改数据。</p><h6 id="授信的攻击者："><a href="#授信的攻击者：" class="headerlink" title="授信的攻击者："></a>授信的攻击者：</h6><p>​        授信的攻击这是经过授权的云服务用户，具有合法的证书，他们会使用这些证书来访问基于云的的IT资源。</p><h6 id="恶意的内部人员："><a href="#恶意的内部人员：" class="headerlink" title="恶意的内部人员："></a>恶意的内部人员：</h6><p>​        恶意的内部人员是试图滥用对云资源范围的访问特权的人。</p><h4 id="1-2列举云安全威胁有哪些，并简要说明。"><a href="#1-2列举云安全威胁有哪些，并简要说明。" class="headerlink" title="1.2列举云安全威胁有哪些，并简要说明。"></a>1.2列举云安全威胁有哪些，并简要说明。</h4><p>​    云安全威胁可能来自内部也可以来自外部，可能来自于人也可能来自于软件程序。</p><h6 id="流量窃听："><a href="#流量窃听：" class="headerlink" title="流量窃听："></a>流量窃听：</h6><p>​        流量窃听是指当数据在传输到云中或在云内部传输时（通常是从云用户到云提供者）被恶意的服务作用者被动地截获，用于非法的信息收集之目的，这种攻击的目的就是直接破坏数据的保密性，可能也破坏了云用户和云提供者之间关系的保密性。由于这种攻击被动的本质，这种攻击更容易长时间进行而不被发现。</p><p><img src="https://cdn.jsdelivr.net/gh/pxl211314/vis@main/img/202203191312631.png" alt="image-20220319130337597"></p><h6 id="恶意媒介："><a href="#恶意媒介：" class="headerlink" title="恶意媒介："></a>恶意媒介：</h6><p>​        恶意媒介威胁是指消息被恶意服务作用者截获并且被篡改，因此可能会被破坏消息的保密性和完整性。它还有可能在把消息转发到目的地之前插入有害的数据。</p><p><img src="https://cdn.jsdelivr.net/gh/pxl211314/vis@main/img/202203191316842.png" alt="image-20220319130923574"></p><h6 id="拒绝服务："><a href="#拒绝服务：" class="headerlink" title="拒绝服务："></a>拒绝服务：</h6><p>​        拒绝服务（Dos）攻击的目标是使IT资源过载至无法正确运行。这种形式的攻击通过是以以下方式之一发起的：<br>​        1）云服务上的负载由于伪造的消息或重复的通信请求不正常地增加。<br>​        2）网络流量过载，降低了响应性，性能下降。<br>​        3）发出多个云服务请求，每个请求都设计成消耗过量的内存和处理资源。</p><p><img src="https://cdn.jsdelivr.net/gh/pxl211314/vis@main/img/202203191317196.png" alt="image-20220319131657096"></p><h6 id="授权不足："><a href="#授权不足：" class="headerlink" title="授权不足："></a>授权不足：</h6><p>​            授权不足攻击是指错误地授予攻击者访问权限或是授权太宽泛，导致攻击者能够访问到本应该受到保护的IT资源。通常结果就是攻击者获得了对某些IT资源的直接访问的权利，这些资源实现的时候是假设只能是授信的用户程序才能访问的。这种攻击的一种变种称为弱认证，如果用弱密码或共享来保持IT资源就可能导致这种攻击。</p><h6 id="虚拟化攻击："><a href="#虚拟化攻击：" class="headerlink" title="虚拟化攻击："></a>虚拟化攻击：</h6><p>​        虚拟化攻击利用的是虚拟化环境中的漏洞，获得了对底层物理硬件未被授权的访问。</p><h6 id="信任边界重叠："><a href="#信任边界重叠：" class="headerlink" title="信任边界重叠："></a>信任边界重叠：</h6><p>​        重叠的信任边界潜藏了一种威胁，攻击者可以利用多个云用户共享的、基于云的IT资源。</p>]]></content>
    
    
    
    <tags>
      
      <tag>cloud computing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>homework1</title>
    <link href="/2022/03/07/homework1/"/>
    <url>/2022/03/07/homework1/</url>
    
    <content type="html"><![CDATA[<h4 id="1-1-云使能技术主要包括哪些技术组件？简要说明其关键特征"><a href="#1-1-云使能技术主要包括哪些技术组件？简要说明其关键特征" class="headerlink" title="1.1 云使能技术主要包括哪些技术组件？简要说明其关键特征"></a>1.1 云使能技术主要包括哪些技术组件？简要说明其关键特征</h4><p>​    宽带网络和Internet架构：所有的云都要连接到网络；互联网络或internet允许远程供给IT资源；<br>​    数据中心技术：一种特殊的IT基础设施，用于集中放置IT资源；<br>​    虚拟化技术：将物理IT资源转换为虚拟IT资源的过程；<br>​    Web技术：WWW是由通过Internet访问的互联IT资源构成的系统，其两个基本组件是Web浏览器客户端和Web服务器；<br>​    多租户技术：使用隔离，数据安全，可恢复性，应用升级，可扩展性，使用计费，数据层隔离；<br>​    服务技术 ：基于Web的服务依靠非专有通信和技术接口定义来建立基于Web技术的标准通信框架，适用于云中大量的功能；</p><h4 id="1-2列举至少三种虚拟化软件，并概括其特点"><a href="#1-2列举至少三种虚拟化软件，并概括其特点" class="headerlink" title="1.2列举至少三种虚拟化软件，并概括其特点"></a>1.2列举至少三种虚拟化软件，并概括其特点</h4><h5 id="VMware："><a href="#VMware：" class="headerlink" title="VMware："></a>VMware：</h5><p>​        封装：虚拟机都保存在文件中，且可通过移动跟复制这些文件的方式来移动跟复制该虚拟机；<br>​        相对于硬件独立：无需修改即可在任何服务器上运行虚拟机；<br>​        隔离：在同一服务器上的虚拟机之间互相隔离，改变了之前单台物理机服务器只能挂以个应用的格局；<br>​        分区：在单个物理服务器上同时运行多个虚拟机，将一个物理服务器的硬件资源分别分区给多个虚拟机；</p><h5 id="VirtualBox："><a href="#VirtualBox：" class="headerlink" title="VirtualBox："></a>VirtualBox：</h5><p>​        模块化：VirtualBox有非常好的模块化设计，以及定义好的编程接口、C/S设计；<br>​         XML描述虚拟机：虚拟机的配置完全通过XML文件完成，虚拟机的定义可以很容易的在不同计算机之间移植；<br>​         对于Windows和Linux的客户附件：VirtualBox有提供特殊的软件套件可以安装在Windows和Linux下来改善其性能以及集成；           </p><h5 id="Xenserver："><a href="#Xenserver：" class="headerlink" title="Xenserver："></a>Xenserver：</h5><p>​        重点在于桌面虚拟化，性价比高，网络性能好，适用于快速与大规模部署，支持系统也相对较多；        </p>]]></content>
    
    
    
    <tags>
      
      <tag>cloud computing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/03/07/hello-world/"/>
    <url>/2022/03/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
